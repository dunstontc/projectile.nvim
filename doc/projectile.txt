*projectile.txt*



    ___       ___       ___       ___       ___       ___       ___     ~
   /\  \     /\  \     /\  \     /\  \     /\  \     /\  \     /\  \    ~
  /::\  \   /::\  \   /::\  \   _\:\  \   /::\  \   /::\  \    \:\  \   ~
 /::\:\__\ /::\:\__\ /:/\:\__\ /\/::\__\ /::\:\__\ /:/\:\__\   /::\__\  ~
 \/\::/  / \;:::/  / \:\/:/  / \::/\/__/ \:\:\/  / \:\ \/__/  /:/\/__/ ~
    \/__/   |:\/__/   \::/  /   \/__/     \:\/  /   \:\__\    \/__/    ~
             \|__|     \/__/               \/__/     \/__/             ~
    ___       ___       ___                                            ~
   /\  \     /\__\     /\  \                                           ~
  _\:\  \   /:/  /    /::\  \                                          ~
 /\/::\__\ /:/__/    /::\:\__\                                         ~
 \::/\/__/ \:\  \    \:\:\/  /                                         ~
  \:\__\    \:\__\    \:\/  /                                          ~
   \/__/     \/__/     \/__/.nvim                                      ~



==============================================================================
CONTENTS                                                 *projectile-contents*


1. Installation.............................|projectile-installation|
2. Settings.................................|projectile-settings|
    2.1 Global Variables....................|projectile-variables|
    2.2 Icons...............................|projectile-icons|
    2.3 Highlighting........................|projectile-highlighting|
3. Commands.................................|projectile-commands|
4. Denite Sources...........................|projectile-denite-sources|
5. Issues...................................|projectile-issues|
6. Changelog................................|projectile-changelog|



==============================================================================
1. Installation					     *projectile-installation*


Install Projectile with your preferred manager or method.
Some examples:

With Shougo/dein.vim: >
    call dein#add('Shougo/denite.nvim')
    call dein#add('dunstontc/projectile.nvim')
<
With junegunn/vim-plug >
    Plug 'Shougo/denite.nvim'
    Plug 'dunstontc/projectile.nvim'

    :PlugInstall
<
With tpope/vim-pathogen: >
    cd ~/.vim/bundle
    git clone https://github.com/Shougo/denite.nvim
    git clone https://github.com/dunstontc/projectile.nvim

<
Once it is in your |runtimepath| you'll have access to a number
of new |denite| sources. Upon first use, `bookmark` & `projectile` will
create |projectile#data_dir|/bookmarks.json & projects.json respectively.

If you would for this folder to be made in a place other than
your `$XDG_CACHE_HOME`, you can use the |projectile#data_dir| variable
to set the path to a different location.

When bookmarks.json & projecs.json are written they'll each have one
item added (|$MVIMRC| for bookmarks and |$VIMRUNTIME| for projects).
This is due to an issue with |denite| where an action can't be made unless
there are existing candidates for a given source. I'm currently working on
a better wat to handle this, but this is how it currently works.

That being said, you can delete these initial items, but make sure that
you add at least one other project or bookmark before doing so.



==============================================================================
2. Settings                                              *projectile-settings*


==============================================================================
2.1 Global Variables                                    *projectile-variables*


g:projectile#data_dir                                    *projectile#data_dir*
	The directory used to store files containing
	saved projects & bookmarks.

	Type:	|String|
	Default: >
                let g:projectile#data_dir = expand($XDG_CACHE_HOME)
                                            \ . '/projectile'
<


g:projectile#directory_command                  *projectile#directory_command*
	Command for opening projects.
	Will be passed the absolute path to a project's root directory.

	Type:	|String|
	Default: >
                let g:projectile#directory_command = 'cd '
<

g:projectile#todo_terms                                *projectile#todo_terms*
	An array of terms to search for with the
	`:Denite todo` command.

        Type:	|List|
	Default: >
                let g:projectile#todo_terms =  [
                    \ 'BUG',
                    \ 'COMBAK',
                    \ 'FIXME',
                    \ 'HACK',
                    \ 'NOTE',
                    \ 'OPTIMIZE',
                    \ 'TODO',
                    \ 'XXX'
                \ ]
<

g:projectile#enable_devicons                      *projectile#enable_devicons*
	Control the use of icons in Denite source results.

        Type:	|Number|
	Options:
		Set to `0` to disable icons entirely.
		Set to `1` to use |devicons|.	(requires a Nerd-Font)
		Set to `2` to use unicode icons.  (works with most fonts)
	Default: >
                let g:projectile#enable_devicons = 0
<

g:projectile#enable_highlighting              *projectile#enable_highlighting*
	Control the use of highlighting
	in Projectile's Denite sources.

        Type:	|Number|
	Options:
		Set to `0` to disable entirely.
		Set to `1` to use highlighting.
	Default: >
                let g:projectile#enable_highlighting = 1
<

g:projectile#enable_formatting                 *projectile#enable_formatting*
	Control the use of formatting
	for Projectile's Denite sources.

	Type:	|Number|
	Default: >
                let g:projectile#enable_formatting = 1
<

g:projectile#search_prog                              *projectile#search_prog*
	The command used to search for TODOs.
    	Checks for executables in the listed order and defaults to
    	the first of the search programs found.

	Type:	|String|
	Options:
		'ag'
		'pt'
		'rg'
		'ack'
		'grep'
	Default: >
                let g:projectile#search_prog = 'grep'
<

g:projectile#loaded                                        *projectile#loaded*
	Used to check/verify if Projectile is installed & loaded.

        Type:	|Number|
	Default: >
                let g:projectile#enabled = 1
<


==============================================================================
2.2 Icons                                                   *projectile-icons*


If enabled with *projectile#enable_devicons,* the following icons are used:


VARIABLE	MEANING			DEFAULT~
------------------------------------------------------------------------------
`behind`	Unpulled Changes	⇣   '\u21e3' Downwards Dashed Arrow
`ahead`		Unpushed Changes	⇡   '\u21e1' Upwards Dashed Arrow
`err`		Incorrect Path		✗   '\u2717' Ballot x
`vcs`		Indicates Repository	⛕   '\u26d5' Alt One-way Left Traffic
`''`		No Changes		✔   '\u2714' Heavy Check Mark
`M`		Modified		!   '\u0021' Exclamation Mark
`A`		Added			+   '\u002B' Plus Sign
`D`		Deleted			✘   '\u2718' Heavy Ballot x
`R`		Renamed			»   '\u00bb' Rt Dbl Angle Quotes
`C`		Copied			«   '\u00ba' Lt Dbl Angle Quotes
`U`		Unmerged		‽   '\u203d' Interrobang
`??`		Untracked		?   '\u003f' Question Mark



==============================================================================
2.3 Highlighting                                     *projectile-highlighting*


If enabled with |projectile#enable_highlighting|
Projectile will define and link the following highlight groups:


GROUP					DEFAULT~
------------------------------------------------------------------------------
*deniteSource_Projectile_Project*	|Normal|
*deniteSource_Projectile_Noise*		|Comment|
*deniteSource_Projectile_Name*		|Identifier|
*deniteSource_Projectile_Path*		|Directory|
*deniteSource_Projectile_Err*		|Error|
*deniteSource_Projectile_Stats*		|Error|
*deniteSource_Projectile_Branch*	|Keyword|
------------------------------------------------------------------------------
*deniteSource_Todo*			|Normal|
*deniteSource_Todo_Noise*		|Comment|
*deniteSource_Todo_Path*		|Directory|
*deniteSource_Todo_Pos*			|Number|
*deniteSource_Todo_Word*		|Type|
*deniteSource_Todo_String*		|String|
------------------------------------------------------------------------------
*deniteSource_Todo_Done*                  |todoDone|
*deniteSource_Todo_ID*                    |todoID|
*deniteSource_Todo_Context*               |todoContext|
*deniteSource_Todo_Project*               |todoProject|
*deniteSource_Todo_Date*                  |Comment|
*deniteSource_Todo_Extra*                 |todoExtra|
*deniteSource_Todo_PriorityA*             |todoPriorityA|
*deniteSource_Todo_PriorityB*             |todoPriorityB|
*deniteSource_Todo_PriorityC*             |todoPriorityC|
*deniteSource_Todo_PriorityD*             |todoPriorityD|
*deniteSource_Todo_PriorityE*             |todoPriorityE|
*deniteSource_Todo_PriorityF*             |todoPriorityF|



==============================================================================
3. Commands                                              *projectile-commands*


`:ProjectileInit`
	Used to make or reset files for saving bookmarks & projects.
	NOTE: This will overwrite any existing projectile
	      projects & bookmarks.



==============================================================================
4. Denite Sources                                  *projectile-denite-sources*


`projectile`                                         *denite-source-projectile*

	Writes to and reads from |projectile#data_dir|/projects.json
	'projects' which are made up of:
		- A name for the project.
		- An absolute path to a project's root directory.
		- A timestamp used to identify the project.
	If a project is moved, the candidate will have an 'X'
	marking its path as broken and will be highlighted as an |Error|
	if enabled with |projectile#enable_highlighting|.
	Extends |denite-kind-directory|.

	Source actions:
		add
		remove
		open (default)
		directory_command        passes the project path to
		                         a command defined with
		                         |projectile#directory_command|

	Format: >
		<branch> <stats> -- <name> -- <path>
<

`bookmark`                                             *denite-source-bookmark*

	Writes to and reads from |projectile#data_dir|/bookmarks.json
	'bookmarks' which are made up of
		- A name for the bookmark.
		- An absolute path to the bookmarked file,
		  including line & column position.
		- A timestamp used to identify the bookmark.
	If a bookmarked file is moved, the bookmark will have an 'X'
	marking its path as broken and will be highlighted as an |Error|.
	if enabled with |projectile#enable_highlighting|.
	Extends |denite-kind-file|.

	Source actions:
		add
		remove
		open (default)

        Format: >
		<icon> <name> -- <path>
<

`todo`                                                     *denite-source-todo*

        This source recursively the current working directory
        for lines containing words listed in |projectile#todo_terms|.
        Currently, it searches for these words
        in all capital letters & followed by a colon and a space.
        (ex NOTE: )
	Uses |denite-kind-file|.

	Source actions:
		open (default)
		add_to_quickfix        appends selected todos to the
		                       quickfix list

        Format: >
		<relative_path> <icon> <line/col> -- TERM: <added_text>
<

`todotxt`                                               *denite-source-todotxt*

	Extends |denite-kind-command|.

	Source custom variables:
        {todotxt_cfg_file}     'string' path to global todo.txt config file
                                (default: `expand($TODOTXT_CFG_FILE)`)

        {todo_file}            'string' path to global todo.txt file
                                (default: `expand($TODO_FILE)`)

        {done_file}            'string' path to global done.txt config file
                                (default: `expand($DONE_FILE)`)

	Source actions:
		add                    add a new todo item
		complete               mark a todo as complete


`todotxt_local`                                   *denite-source-todotxt_local*

        Identical to todotxt, but finds any *.todo.txt file in
        the current project directory.


`sauce`                                                   *denite-source-sauce*

	Nominates candidates based on the current
	commandline completion suggestions for Denite.
	(`:Denite <C-d>`)
	Only lists the currently available sources.
	Uses |denite-kind-command|.

	Source actions:
		execute (default)       executes `:Denite <candidate_name>`

------------------------------------------------------------------------------
                                                      *projectile-denite-tips*
If you haven't already made the following mappings,
I'd suggest adding them to you configuration.
>
 call denite#custom#map(
       \ 'normal',
       \ 'a',
       \ '<denite:do_action:add>',
       \ 'noremap'
       \)

 call denite#custom#map(
      \ 'normal',
      \ 'd',
      \ '<denite:do_action:delete>',
      \ 'noremap'
      \)
<


==============================================================================
5. Issues                                                  *projectile-issues*


If you run into any bugs or if you have a feature request, feel free to
open an issue at https://github.com/dunstontc/projectile.nvim/issues



==============================================================================
6. Changelog                                            *projectile-changelog*


------------------------------------------------------------------------------
0.0.6	2018-01-11
        - Added denite action to append todos to qflist
        - Added todotxt_local
        - Removed timestamp from bookmark/projectile source abbr
        - Added installation instructions for Dein, Plug, & Pathogen
        - Other updates to documentation

0.0.5	2018-01-08
        - Rewrote highlight patterns for use with denite; much faster now
        - Show bookmark name in delete confirmation

0.0.4	2018-01-02
	- Added options to disable highlighting & formatting
	- Added stable todotxt & todotxt_local |sources|
	- Updated documentation


0.0.3	2017-12-31

        - Added |denite| source `sauce`
        - Added installation instructions to documentation
        - Other updates to documentation


0.0.2	2017-12-29

	- Added initial git info feature for projects
    	- Added initial implementation of |denite| todo.txt source
    	- Updated documentation


0.0.1	2017-12-27

        - Refactored syntax highlighting for all |denite| sources
        - Extracted candidate formatting & conversion to a dedicated function
        - Added filetype detection for todo.txt files
        - Updated documentation
        - Added changelog



==============================================================================
Version:    0.0.6
License:    MIT License
Author:     Clay Dunston <dunstontc@gmail.com>
Website:    https://github.com/dunstontc/projectile.nvim

vim:tw=78:ts=8:ft=help:norl:
